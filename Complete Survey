##Load the excel library and read the data
library(readxl)
survey_complete <- read_excel(paste("~/Desktop/Survey_Key_and_Complete_Responses_excel.xlsx"), sheet = 2, col_names = TRUE)

install.packages("caret", dependencies = c("Depends", "Suggests"))
library(caret)
library(mlbench)

set.seed(107)

##Create Data Partition
ptr=0.75
inTrain <- createDataPartition(y = survey_complete$brand, p=ptr, list=FALSE)
str(inTrain)

training <- survey_complete[ inTrain,]
testing <- survey_complete[-inTrain,]
nrow(training)
nrow(testing)

##trainControl
training[["brand"]]=factor(training[["brand"]])
ctrl <- trainControl(method = "repeatedcv",number=10, repeats = 1)

##train                   
knnFit <- train(brand ~ ., data = training, method = "knn",
                tuneLength = 15, trControl=ctrl, preProcess = c("center", "scale"))
knnFit
plot(knnFit, print.thres = 0.5, type="S")

##predict
knnPredict <- predict(knnFit, newdata = testing)
table(knnPredict)

##Confusion Matrix
confusionMatrix(knnPredict, testing$brand)

##Use the testset incomplete responses
myfile <- "https://raw.githubusercontent.com/pvpgit/Brand-Prediction/master/SurveyIncomplete.csv"
if (file.exists(myfile)){
  incomplete_survey<-read.csv(paste(myfile, sep="", header=TRUE)) 
  message ("From Github")
} else {
  incomplete_survey<-read.csv(paste("~/Desktop/SurveyIncomplete.csv", sep="", header = TRUE))
  message ("from desktop")  
}

##Use KNN to predict using new data set
newKNNPred<-cbind(incomplete_survey, pred=predict(knnFit, newdata=incomplete_survey))

write.csv(newKNNPred, "~/Desktop/predictionsCaretKNN.csv", row.names = F)

##Random Forest
install.packages("randomForest")
library(randomForest)

##Random Forest Model 10 fold cross validation
rfFit <- train(brand ~ ., data = training, method = "rf",
               tuneLength = 10, trControl=ctrl, preProcess = c("center", "scale"))
rfFit
plot(rfFit, print.thres = 0.5, type="S")

##predict
rfPredict <- predict(rfFit, newdata = testing)
table(rfPredict)

confusionMatrix(rfPredict, testing$brand)

## Use Random Forest to predict using new data set
newRFPrediction<-cbind(incomplete_survey, pred=predict(rfFit, newdata=incomplete_survey))

#Create a predictions.csv file on desktop
write.csv(newRFPrediction, "~/Desktop/predictionsCaretRF.csv", row.names = F)

# Read file in a data frame
RF_prediction<-read.csv("~/Desktop/predictionsCaretRF.csv", sep=",", header = TRUE)
KNN_prediction<-read.csv("~/Desktop/predictionsCaretKNN.csv", sep=",", header = TRUE)

# Print count for prediction
table(KNN_prediction$pred) 
table(RF_prediction$pred) 

## Combine the results from KNN and FR
PredictionCompare <- NULL
PredictionCompare<-cbind(RF_prediction, KNN_prediction$pred )

colnames(PredictionCompare)[9] <- "KNNPred" 

# Compare results between KNN and RF
matchN <- PredictionCompare[PredictionCompare$pred == PredictionCompare$KNNPred,]

# Number of Rows matching between KNN and RF
nrow(matchN)

##Percent comparision of matching rows between KNN and RF models
percentage = (nrow(matchN)/nrow(PredictionCompare) *100)
percentage
